/**
 * DEVELOPMENT WEBPACK CONFIGURATION
 */

const path = require('path');
const { merge } = require('webpack-merge')
const common = require('./webpack.common');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = merge(common, {
    mode: 'development',
    output: {
        filename: '[name].js',
        path: path.resolve(__dirname, 'build')
    },
    plugins: [
        new HtmlWebpackPlugin({
            inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
            template: './src/index.html',
        })
    ],
    module: {
        rules: [
            {
                test: /\.(js|jsx)$/,
                exclude: '/node_modules/',
                use: ['babel-loader']
            },
            {
                test: /\.css$/,
                use: [
                    'style-loader', // Inject style into dom
                    'css-loader' // Turns css into js
                ] // load reverse oreder
            }
        ]
    },
    // devServer: {
    //     contentBase: path.resolve(__dirname, 'build')
    // }, // using webpack-dev-server use devServer object instead of output
    devtool: 'source-map',
    target: 'web'
});